# Upstream servers
upstream frontend {
    server frontend:3000;
}

upstream backend {
    server backend:4000;
}

# HTTP to HTTPS redirect
server {
    listen 80;
    server_name zettanote.tech api.zettanote.tech;

    # Redirect all HTTP traffic to HTTPS
    return 301 https://$server_name$request_uri;
}

# Main domain - Frontend
server {
    listen 443 ssl http2;
    server_name zettanote.tech;

    # SSL certificates (managed by certbot)
    ssl_certificate /etc/letsencrypt/live/zettanote.tech/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/zettanote.tech/privkey.pem;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # Rate limiting
    limit_req zone=general burst=20 nodelay;

    # Proxy to frontend
    location / {
        proxy_pass http://frontend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # Timeout settings
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}

# API subdomain - Backend
server {
    listen 443 ssl http2;
    server_name api.zettanote.tech;

    # SSL certificates (managed by certbot)
    ssl_certificate /etc/letsencrypt/live/zettanote.tech/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/zettanote.tech/privkey.pem;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # Rate limiting for API
    limit_req zone=api burst=10 nodelay;

    # Proxy to backend
    location / {
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # Timeout settings
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}

# Block all other requests
server {
    listen 80 default_server;
    listen 443 ssl default_server;
    server_name _;

    # Default SSL cert for default server (optional)
    ssl_certificate /etc/letsencrypt/live/zettanote.tech/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/zettanote.tech/privkey.pem;

    return 444;
}