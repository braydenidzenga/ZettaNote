name: Build and Push Docker Images

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:
  detect-changes:
    name: Detect Changed Folders
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.repository == 'braydenidzenga/ZettaNote'
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
      nginx: ${{ steps.filter.outputs.nginx }}
      motia: ${{ steps.filter.outputs.motia }}
      # admin-portal: ${{ steps.filter.outputs.admin-portal }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check changed paths
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            backend:
              - 'backend/**'
            frontend:
              - 'frontend/**'
            nginx:
              - 'nginx/**'
            motia:
              - 'motia/**'

  build-and-push-backend:
    runs-on: ubuntu-latest
    # needs: detect-changes
    if: github.ref == 'refs/heads/main' && github.repository == 'braydenidzenga/ZettaNote'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set lowercase repository owner
        id: repo-owner
        run: echo "owner_lc=${OWNER,,}" >> $GITHUB_OUTPUT
        env:
          OWNER: ${{ github.repository_owner }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for backend
        id: meta-backend
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ steps.repo-owner.outputs.owner_lc }}/zettanote-backend
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/v2-CI' }}

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ steps.meta-backend.outputs.tags }}
          labels: ${{ steps.meta-backend.outputs.labels }}

  build-and-push-frontend:
    runs-on: ubuntu-latest
    # needs: detect-changes
    if: github.ref == 'refs/heads/main' && github.repository == 'braydenidzenga/ZettaNote'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set lowercase repository owner
        id: repo-owner
        run: echo "owner_lc=${OWNER,,}" >> $GITHUB_OUTPUT
        env:
          OWNER: ${{ github.repository_owner }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for frontend
        id: meta-frontend
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ steps.repo-owner.outputs.owner_lc }}/zettanote-frontend
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/v2-CI' }}

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ steps.meta-frontend.outputs.tags }}
          labels: ${{ steps.meta-frontend.outputs.labels }}
          build-args: |
            VITE_API_URL=${{ secrets.BACKEND_API_URL || 'http://localhost:4000' }}

  build-and-push-nginx:
    runs-on: ubuntu-latest
    # needs: detect-changes
    if: github.ref == 'refs/heads/main' && github.repository == 'braydenidzenga/ZettaNote'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set lowercase repository owner
        id: repo-owner
        run: echo "owner_lc=${OWNER,,}" >> $GITHUB_OUTPUT
        env:
          OWNER: ${{ github.repository_owner }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for nginx
        id: meta-nginx
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ steps.repo-owner.outputs.owner_lc }}/zettanote-nginx
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/v2-CI' }}

      - name: Build and push nginx image
        uses: docker/build-push-action@v5
        with:
          context: ./nginx
          file: ./nginx/Dockerfile
          push: true
          tags: ${{ steps.meta-nginx.outputs.tags }}
          labels: ${{ steps.meta-nginx.outputs.labels }}

  build-and-push-motia:
    runs-on: ubuntu-latest
    # needs: detect-changes
    if: github.ref == 'refs/heads/main' && github.repository == 'braydenidzenga/ZettaNote'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set lowercase repository owner
        id: repo-owner
        run: echo "owner_lc=${OWNER,,}" >> $GITHUB_OUTPUT
        env:
          OWNER: ${{ github.repository_owner }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for motia
        id: meta-motia
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ steps.repo-owner.outputs.owner_lc }}/zettanote-motia
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/v2-CI' }}

      - name: Build and push motia image
        uses: docker/build-push-action@v5
        with:
          context: ./motia
          file: ./motia/Dockerfile
          push: true
          tags: ${{ steps.meta-motia.outputs.tags }}
          labels: ${{ steps.meta-motia.outputs.labels }}

  # build-and-push-admin:
  #   runs-on: ubuntu-latest
  #   needs: detect-changes
  #   if: needs.detect-changes.outputs.admin-portal == 'true' && github.ref == 'refs/heads/main' && github.repository == 'braydenidzenga/ZettaNote'
  #   permissions:
  #     contents: read
  #     packages: write
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: setup node
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: "24"

  #     - name: Setup pnpm
  #       uses: pnpm/action-setup@v4
  #       with:
  #         version: 8

  #     - run: pnpm install
  #       working-directory: ./admin-portal

  #     - run: pnpm run build
  #       working-directory: ./admin-portal
  #       env:
  #         REACT_APP_API_URL: ${{ secrets.BACKEND_API_URL || 'http://localhost:4000' }}
  #         CI: false
  #     - name: Set lowercase repository owner
  #       id: repo-owner
  #       run: echo "owner_lc=${OWNER,,}" >> $GITHUB_OUTPUT
  #       env:
  #         OWNER: ${{ github.repository_owner }}

  #     - name: Log in to GitHub Container Registry
  #       uses: docker/login-action@v3
  #       with:
  #         registry: ${{ env.REGISTRY }}
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Extract metadata for admin-portal
  #       id: meta-admin
  #       uses: docker/metadata-action@v5
  #       with:
  #         images: ${{ env.REGISTRY }}/${{ steps.repo-owner.outputs.owner_lc }}/zettanote-admin
  #         tags: |
  #           type=ref,event=branch
  #           type=sha,prefix={{branch}}-
  #           type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/v2-CI' }}

  #     - name: Build and push admin-portal image
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: ./admin-portal
  #         file: ./admin-portal/Dockerfile
  #         push: true
  #         tags: ${{ steps.meta-admin.outputs.tags }}
  #         labels: ${{ steps.meta-admin.outputs.labels }}
  #         build-args: |
  #           REACT_APP_API_URL=${{ secrets.BACKEND_API_URL || 'http://localhost:4000' }}

  deploy:
    runs-on: ubuntu-latest
    needs:
      - detect-changes
      - build-and-push-backend
      - build-and-push-frontend
      - build-and-push-nginx
      - build-and-push-motia
    steps:
      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER || 'root' }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT || '22' }}
          timeout: 30s
          command_timeout: 10m
          script: |
            echo "ðŸš€ Starting deployment..."

            # Navigate to deployment directory
            cd ${{ secrets.DEPLOY_PATH || '~/prod' }}

            echo "ðŸ“¥ Pulling latest Docker images..."
            docker compose pull

            echo "ðŸ”„ Restarting services..."
            docker compose up -d

            echo "ðŸ§¹ Cleaning up old images..."
            docker image prune -f

            echo "âœ… Deployment completed successfully!"

            # Show status
            echo ""
            echo "ðŸ“Š Container Status:"
            docker compose ps
