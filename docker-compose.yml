# Docker Compose configuration for ZettaNote application

services:
  nginx:
    image: ghcr.io/braydenidzenga/zettanote-nginx:latest
    container_name: zettanote-nginx
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - nginx_certbot:/etc/letsencrypt
      - nginx_certbot:/var/www/certbot
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - zettanote-network

  backend:
    image: ghcr.io/braydenidzenga/zettanote-backend:latest
    container_name: zettanote-backend
    expose:
      - '4000'
    environment:
      - NODE_ENV=production
      - PORT=4000
      - DB=mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@zettanote-mongodb:27017/zettanote?authSource=admin
      - JWT_SECRET=${JWT_SECRET}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
      - RESEND_API_KEY=${RESEND_API_KEY}
      - FROM_EMAIL=${FROM_EMAIL}
      - FRONTEND_URL=${FRONTEND_URL}
      - BACKEND_URL=${BACKEND_URL}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - REDIS_URL=redis://zettanote-redis:6379
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_SECRET=${CLOUDINARY_SECRET}
      - DISABLE_REMINDER_CRON=${DISABLE_REMINDER_CRON}
      - DISABLE_IMAGE_CLEANUP_CRON=${DISABLE_IMAGE_CLEANUP_CRON}
    depends_on:
      - mongodb
      - redis
    restart: unless-stopped
    healthcheck:
      test:
        ['CMD', 'wget', '--no-verbose', '--tries=1', '--spider', 'http://localhost:4000/api/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - zettanote-network

  frontend:
    image: ghcr.io/braydenidzenga/zettanote-frontend:latest
    container_name: zettanote-frontend
    expose:
      - '3000'
    environment:
      - NODE_ENV=production
      - PORT=3000
      - VITE_API_URL=${REACT_APP_API_URL}
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'wget', '--no-verbose', '--tries=1', '--spider', 'http://localhost:3000/']
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - zettanote-network

  redis:
    image: redis:7.0-alpine
    container_name: zettanote-redis
    expose:
      - '6379'
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - zettanote-network

  mongodb:
    image: mongo:7.0
    container_name: zettanote-mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=zettanote
    volumes:
      - mongodb_data:/data/db
    expose:
      - '27017'
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'mongosh', '--eval', 'db.adminCommand("ping")']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - zettanote-network

volumes:
  nginx_certbot:
  mongodb_data:

networks:
  zettanote-network:
    driver: bridge
